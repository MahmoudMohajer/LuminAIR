use ::serde::{Deserialize, Serialize};
use luminair_air::{LuminairClaim, LuminairInteractionClaim};
use stwo_prover::core::{prover::StarkProof, vcs::ops::MerkleHasher};

pub mod prover;
pub mod serde;

/// Represents the complete proof for a LuminAIR computation.
///
/// This structure bundles the core STARK proof generated by the STWO prover
/// along with the associated claims for both the main execution trace and the interaction trace phases.
/// The claims contain commitments and other data necessary for the verifier.
#[derive(Serialize, Deserialize, Debug)]
pub struct LuminairProof<H: MerkleHasher> {
    /// Claims associated with the main execution trace components (e.g., commitments to Add, Mul traces).
    pub claim: LuminairClaim,
    /// Claims associated with the interaction trace components (e.g., accumulated LogUp values).
    pub interaction_claim: LuminairInteractionClaim,
    /// The cryptographic proof generated by the STWO STARK prover.
    pub proof: StarkProof<H>,
}
